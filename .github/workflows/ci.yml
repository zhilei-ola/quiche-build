name: Quiche Nginx Module

on:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
        - tag: ubuntu-20.04
          host: ubuntu-20.04
      
    runs-on: ${{ matrix.config.host }}

    env:
      DEPOT_TOOLS_WIN_TOOLCHAIN: 0
      PYTHONIOENCODING: utf-8
      PYTHONLEGACYWINDOWSSTDIO: utf-8

    steps:
    - name: Prepare
      run: |
        pwd
        sudo df -h
        echo "install cmake and other tools"
        sudo df -h

    - name: Checkout
      if: steps.release_check.outputs.skip_build != 'true' 
      uses: actions/checkout@v1

    - name: Install dependencies (ubuntu)
      run: sudo apt-get install patch tree zip libprotobuf-dev protobuf-compiler

    - name: Fetch code
      id: fetch_code_from_repo
      run: |
        git clone --recursive https://github.com/bilibili/nginx_quic_stack.git
        cd nginx_quic_stack
      shell: bash
    
    - name: Start build 
      id: start_build
      run: |
        value=`date +%Y-%m-%d-%H-%M-%S`
        echo ::set-output name=build_time::$value
        pwd
        cd nginx_quic_stack
        mkdir build && cd build
        cmake .. && make
        cd -
      shell: bash

    - name: Print out tree
      run: tree ./build/
      shell: bash

    # - name: Create release
    #   if: github.event_name != 'pull_request'
    #   continue-on-error: true
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.PERMANENT_GITHUB_TOKEN }}
    #   with:
    #     tag_name: f-${{ steps.get_engine_version.outputs.engine_version }}-${{ steps.get_build_time.outputs.build_time }}
    #     release_name: Flutter Engine ${{ steps.get_engine_version.outputs.engine_version }}-${{ steps.get_build_time.outputs.build_time }}

    # - name: Create release zip
    #   if: steps.release_check.outputs.skip_build != 'true' 
    #   run: cd engine_out && zip -qq -r ../${{ matrix.config.host_tag }}-${{ matrix.config.tag }}.zip ./*
    #   shell: bash

    # - name: Upload release asset
    #   if: steps.release_check.outputs.skip_build != 'true' && github.event_name != 'pull_request' 
    #   uses: softprops/action-gh-release@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.PERMANENT_GITHUB_TOKEN }}
    #   with:
    #     tag_name: f-${{ steps.get_engine_version.outputs.engine_version }}-${{ steps.get_build_time.outputs.build_time }}
    #     name: Flutter ${{ steps.get_engine_version.outputs.engine_version }}-${{ steps.get_build_time.outputs.build_time }}
    #     files: ${{ matrix.config.host_tag }}-${{ matrix.config.tag }}.zip